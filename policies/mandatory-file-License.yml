# metadata
name: This repo is missing a LICENSE file
description: This is a config to check if a LICENSE is present in a repo.

# filters
resource: repository
where:
- |
  repository.name.startsWith("GitOps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NUWA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Win32-Content-Prep-Tool", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NeuralSpeech", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("projectevidens-mobile-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SATechnicalOnboarding", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SSMA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project-azua", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sql-server-migration-assistant", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WebRTC-universal-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-RForDataProfessionals", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project_olive", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VSLinux", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("windows-app-rs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StemGNN", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("alps-demos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TACO", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LoRA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DirectML-ShooterGame", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals(".github", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("containerregistry", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("nodejs-guidelines", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ros_azure_iothub", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("varuna", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("optimization-insights", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mpcen-test", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-dev-germany", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Virtual-Robot-Overlay-for-Online-Meetings", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AL-Go-PTE", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Identity-ADO-API-Coverage", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("projectevidens-web-frontend", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fluentui-astro-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MRTK3-iet-tutorials", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mccp-cli-actions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics-AX-Integration", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dtp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FMLab", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rai-orchestrator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vert-papers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GTADocs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("UniTAB", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OHDSIonAzure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MeshGraphormer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("brainstorm-fluidframework-m365-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msra-star", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("RoadDetections", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-azuresqlworkshop", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("building-damage-assessment-cnn-siamese", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("gh-sync", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-data-wrangler", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-dev", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-standup-teams", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mccp-management-api", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("winrtc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dropvalidator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinObjC-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("slingshot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("aims-tscience-nl2code", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dia-rs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BikeSharing360_MobileApps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-appsample-coloringbook", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-Announcements", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("carbon-aware-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedReality-SceneUnderstanding-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StigRepo", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mlops-templates", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("terraform-provider-azurerm-wiki", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cli", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ARM-on-Windows-Ecosystem", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FluidDemos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("projectevidens-mobile-ios-signing", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AL-Go-AppSource", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fonts", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("homebrew-mssql-release", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("meru-release", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ACR-GrowthPlaybook", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-settings-sync-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-language-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-extension-color-control", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-sampleBarChart", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-AsterPlot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Partner-Center-Java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("playwright-service-benchmarks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ToxiScope", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("projectevidens-mobile-ios", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cre-avengers-interns", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MPS", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Telemetry-Collection-Spec", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NTT", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SDR", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-bdc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-boards-branch-visualization", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ter_search", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("scittcli", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("daytona-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenHack.ja-JP", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("commercial-marketplace-ama-metering-accelerator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("devdiv-metrics-and-analyses", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-extension-recommender-exploration", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("simonhzh", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vs-dtdl-language-support", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CBL-MarinerCoreUI", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SBOMViewer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("peek", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Power-BI-ADF-Synapse", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-azuresqllabs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureBotServices-scenarios", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ostc-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("nestle-acne-assessment", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-docker-extensibility", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-challenges", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("clusterfleet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mesmer-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mwt-ds", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ServBlockTracableCert", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-ui", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("componentdetection-azdo", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("llvm-rust-arm64ec", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("r-server-hospital-length-of-stay", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("partner-center-assets", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Code-Search", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-calliope-built", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sampleapp-ios-swift", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dtpscan", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("coax", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("codex-gaming", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("solution-accelerator-containerized-store", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("factored-segmenter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("onnx-converters-private", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsmarketplace-internal", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("jort", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenHack.fr-FR", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wikiExtractor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sampleapp-macos-swift", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BusinessCentralHelloWorld", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("finance-advanced-analytics", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-servicenow-app", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("emerging-opportunities", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ISCKIT-MC4H-IOO", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wave-analysis", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PVACustomerSuccessRepo", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NH4H-UserReg", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GHEC-repo-for-testing", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remotehub", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_crypto_release", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ads-service-downloader", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("HealthyCountryAI", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pyrx", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MicroservicesContainersWksp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-telemetry-health", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AutoPredOptConnector", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fast_dcs_textrank", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dataforge", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-team", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cognitive-services-sdk-react-native-example", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsda", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("intelligent_auto_scaling", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dcs_dev", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-sql2019lab", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-kusto", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("janus", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-Planning", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("apple-business-chat-adapter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-python-internalbacklog", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("build_with_aks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ospo-strategic-fund", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("meru-staging-dpdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-update-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-sampleCorrPlotRVisual", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AST-Team-Docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dexter-robosuite-benchmark", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("api.rushstack.io-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("lint.rushstack.io-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("formula", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerplatform-telemetry", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FOC-Tahuya", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-swa-workshop-template", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-translations", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("flsync", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("devdivdataquality", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.fil-ph", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.mt-mt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.lb-lu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.ga-ie", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.bs-Latn-BA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.ka-ge", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.zh-tw", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.tr-tr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.sv-se", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.ru-ru", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.pt-pt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.pt-br", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.pl-pl", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.nl-nl", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.ko-kr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.it-it", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.hu-hu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.fr-fr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.es-es", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.cs-cz", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("makecode-arcade-player", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("blocksparse", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dtab-paper", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-azurevm-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-ssh", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("openvpn-build", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-electron-prebuilt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet-blog", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.pdf", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("clean-code-sparksql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BikeSharing360_CognitiveServicesKioskApp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-pulsechart", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mobile-center-sdk-specs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sampleapp-xamarin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-unpkg", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-release-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ostc-automation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cpp_client_telemetry_modules", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("customer-insights-azure-data-workshop", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-website-videos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-testplans-test-case-explorer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-microbit-built", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-sqlonopenshift", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("aks_mip_development", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("moodle-theme_boost_o365teams", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-smoketest-express", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vott-react", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("windows-developer-blog-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sample-repo-gen-tool", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VSCodeCSharpExt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mlops-kt-demo", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-Custom-Speech-Service", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-arcade-sim", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cpp-blog", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-experiments", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqldev", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-minecraft", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fast-labs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("gamci-test-match", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SuperScaler", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ads-merger", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedRealityFeatureTool", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ospo-ahoy-templates", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("playwright-service", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pyscope-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Apache-Provider-pr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("opendata", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-deployment-config", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("potomac", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-standup", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-dev-day-submission", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("goal-ontology-fhl", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-ev3-chassis", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DP-LoRA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("arc-sql-mi-db-operator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-boards-estimate-backend", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("chemistry-qa", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-linux-automation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure-SQL-DB-auditing-OMS-integration", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sampleapp-tvos-swift", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-push-site-private", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-push-service", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("homebrew-mssql-preview", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ess", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-marketplace-extension-browser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("IoMT-SMART-FHIR", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Decentralized-Identity-and-Verifiable-Credentials", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("populate-azure-ad-tenant", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NH4H-TeamBuilder", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-ssh-portal", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msr-hax-hai-team-simulation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-spline", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-assorules", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DaphneDA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("d365-fno-entitystore-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DIaLAppSamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SimbaODBC-CosmosDB.Development", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ose-cd-hackathon-bcde", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("M365DevBlogs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("JSTSdocs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BuildKeynote2021Reunion", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fabric8-maven-plugin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-globemap", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-uservoice-ui-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("repo-analysis-detectors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fluentui-eco", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Reactor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MBCShopifyAppFrontend", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LargeItemImport-SDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("graphql-codegen-fluid", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-notebook-history", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ose-cd-hackathon-azdo", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StatusService", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CaptionBot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscordovadocs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GraphSampleBot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MLCluster", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("core-docs-samples-ci", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("api-compat", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("docsmsftblog-exp", StringComparison.InvariantCultureIgnoreCase)

# primitive configuration
configuration:
    mandatoryFiles:
     issueTitle: This repo is missing a LICENSE file
     issueBody: |
            This repository is currently missing a LICENSE file.
            
            A license helps users understand how to use your project in a compliant manner. You can find the standard MIT license Microsoft uses at: https://github.com/microsoft/repo-templates/blob/main/shared/LICENSE.

            If you would like to learn more about open source licenses, please visit the document at https://aka.ms/license (Microsoft-internal guidance).
     prTitle: Adding Microsoft LICENSE
     prBody: 
     file:
      - path: license((-|_)([a-z0-9])*)*(\.[-_a-z0-9]+)*
        ignoreCase: true
     issueReminder:
        firstReminderGapDays: -1               
        followUpReminderGapDays: 0
